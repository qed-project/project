rule add_associative { (x + y) + z = x + (y + z) }
rule add_commutative { x + y = y + x }
rule add_identity { x + 0 = x }
rule add_inverse { x + (-x) = 0 }

rule sub_definition { x + (-y) = x - y }

rule mul_associative { (x * y) * z = x * (y * z) }
rule mul_commutative { x * y = y * x }
rule mul_identity { x * 1 = x}
rule mul_inverse { x * x^(-1) = 1 }

rule div_definition { x * y^(-1) = x / y }

rule distribution { x * (y + z) = x * y + x * z }
rule distribution_reversed { (x + y) * z = x * z + y * z }

rule double_negation { -(-x) = x }

rule binomial1 { (a + b) * (a + b) = a^2 + 2*a*b + b^2 }
rule binomial2 { (a - b) * (a - b) = a^2 - 2*a*b + b^2 }
rule binomial3 { (a + b) * (a - b) = a^2 - b^2 }

rule exponent_add { a^n * a^m = a^(n+m) }
rule exponent_sub { a^n / a^m = a^(n-m) }
